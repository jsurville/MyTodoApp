{"version":3,"file":"angular-component-router.js","sources":["ng:/@angular-component/router/lib/url-parser.ts","ng:/@angular-component/router/lib/route-params.service.ts","ng:/@angular-component/router/lib/router.service.ts","ng:/@angular-component/router/lib/link-to.directive.ts","ng:/@angular-component/router/lib/operators/filter-nullable.operator.ts","ng:/@angular-component/router/lib/link-active.directive.ts","ng:/@angular-component/router/lib/route-component.directive.ts","ng:/@angular-component/router/lib/utils/path-parser.ts","ng:/@angular-component/router/lib/utils/compare-routes.ts","ng:/@angular-component/router/lib/router.component.ts","ng:/@angular-component/router/lib/route.component.ts","ng:/@angular-component/router/lib/router.module.ts","ng:/@angular-component/router/index.ts","ng:/@angular-component/router/angular-component-router.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UrlParser {\n  parse(url: string, base?: string | URL): URL {\n    if (base) {\n      return new URL(url, base);\n    }\n    return new URL(url);\n  }\n\n  joinUrls(currentUrl: string, url: string): string {\n    const currentUrlSegments = currentUrl\n      .split('#')[0] // remove hash\n      .split('?')[0] // remove query params\n      .split('/');\n    const urlSegments = url.split('/');\n\n    return urlSegments\n      .reduce((segments, segment) => {\n        if (segment === '.') {\n          return segments;\n        }\n        if (segment === '..') {\n          return segments.slice(0, -1);\n        }\n        return [...segments, segment];\n      }, currentUrlSegments)\n      .join('/');\n  }\n}\n","import { Observable } from 'rxjs';\n\nexport interface Params {\n  [param: string]: any;\n}\n\nexport class RoutePath<T extends string = string> extends Observable<T> {}\n\nexport class RouteParams<T extends Params = Params> extends Observable<T> {}\n\nexport class QueryParams<T extends Params = Params> extends Observable<T> {}\n\nexport function compareParams(previous: Params, current: Params): boolean {\n  return (\n    previous === current || JSON.stringify(previous) === JSON.stringify(current)\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { PlatformLocation, Location } from '@angular/common';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { UrlParser } from './url-parser';\nimport { Params, compareParams } from './route-params.service';\n\ninterface State {\n  url: string;\n  queryParams: Params;\n  hash: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class Router {\n  private readonly state$ = new BehaviorSubject<State>({\n    url: this.location.path(),\n    queryParams: {},\n    hash: '',\n  });\n\n  readonly url$ = this.state$.pipe(\n    map((state) => state.url),\n    distinctUntilChanged()\n  );\n  readonly hash$ = this.state$.pipe(\n    map((state) => state.hash),\n    distinctUntilChanged()\n  );\n  readonly queryParams$ = this.state$.pipe(\n    map((state) => state.queryParams),\n    distinctUntilChanged(compareParams)\n  );\n\n  constructor(\n    private location: Location,\n    private platformLocation: PlatformLocation,\n    private urlParser: UrlParser\n  ) {\n    this.location.subscribe(() => {\n      this.nextState(this.getLocation());\n    });\n\n    this.nextState(this.getLocation());\n  }\n\n  forward() {\n    this.location.forward();\n    this.nextState(this.getLocation());\n  }\n\n  back() {\n    this.location.back();\n    this.nextState(this.getLocation());\n  }\n\n  go(url: string, queryParams?: Params, hash?: string) {\n    this.location.go(this.serializeUrl(url, queryParams, hash));\n\n    this.nextState(this.getLocation());\n  }\n\n  replace(url: string, queryParams?: Params, hash?: string) {\n    this.location.replaceState(this.serializeUrl(url, queryParams, hash));\n\n    this.nextState(this.getLocation());\n  }\n\n  serializeUrl(url: string, queryParams?: Params, hash?: string) {\n    // if relative path\n    if (!url.startsWith('/')) {\n      url = this.urlParser.joinUrls(this.location.path(), url);\n    }\n\n    return (\n      url +\n      (queryParams ? `?${this.stringifyQueryParams(queryParams)}` : '') +\n      `${hash ? '#' + hash : ''}`\n    );\n  }\n\n  getExternalUrl(url: string) {\n    return this.location.prepareExternalUrl(url);\n  }\n\n  parseSearchParams(params: string | URLSearchParams) {\n    const searchParams = new URLSearchParams(params);\n    const queryParams: Params = {};\n\n    searchParams.forEach((value, key) => {\n      queryParams[key] = value;\n    });\n\n    return queryParams;\n  }\n\n  normalizePath(path: string) {\n    return this.location.normalize(path);\n  }\n\n  private getLocation() {\n    return this.platformLocation.href;\n  }\n\n  private nextState(url: string) {\n    const parsedUrl = this._parseUrl(url);\n\n    this.state$.next({\n      url: parsedUrl.pathname,\n      queryParams: this.parseSearchParams(parsedUrl.searchParams),\n      hash: parsedUrl.hash ? parsedUrl.hash.split('#')[1] : '',\n    });\n  }\n\n  private _parseUrl(path: string): URL {\n    return this.urlParser.parse(path);\n  }\n\n  private stringifyQueryParams(params: Params) {\n    return new URLSearchParams(params).toString();\n  }\n}\n","import {\n  Directive,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { Router } from './router.service';\nimport { Params } from './route-params.service';\n\nconst DEFAULT_TARGET = '_self';\n\n/**\n * The LinkTo directive links to routes in your app\n *\n * Links are pushed to the `Router` service to trigger a route change.\n * Query params can be represented as an object or a string of names/values\n *\n * <a linkTo=\"/home/page\" [queryParams]=\"{ id: 123 }\">Home Page</a>\n * <a [linkTo]=\"'/pages' + page.id\">Page 1</a>\n */\n@Directive({ selector: 'a[linkTo]' })\nexport class LinkTo {\n  @Input() target = DEFAULT_TARGET;\n  @HostBinding('href') linkHref?: string | null;\n\n  @Input() set linkTo(href: string | null | undefined) {\n    if (href === null || href === undefined) {\n      return;\n    }\n    this._href = href;\n    this._updateHref();\n  }\n\n  @Input() set queryParams(params: Params | null | undefined) {\n    this._query = params;\n    this._updateHref();\n  }\n\n  @Input() set fragment(hash: string | null | undefined) {\n    this._hash = hash;\n    this._updateHref();\n  }\n\n  @Output() hrefUpdated: EventEmitter<string> = new EventEmitter<string>();\n\n  private _href: string;\n  private _query: Params;\n  private _hash: string;\n\n  constructor(private router: Router) {}\n\n  /**\n   * Handles click events on the associated link\n   * Prevents default action for non-combination click events without a target\n   */\n  @HostListener('click', ['$event'])\n  onClick(event: any) {\n    if (!this._href) {\n      return;\n    }\n    if (!this._comboClick(event) && this.target === DEFAULT_TARGET) {\n      this.router.go(this._href, this._query, this._hash);\n\n      event.preventDefault();\n    }\n  }\n\n  private _updateHref() {\n    const href = this._cleanUpHref(this._href);\n\n    this.linkHref = this.router.serializeUrl(href, this._query, this._hash);\n\n    this.hrefUpdated.emit(this.linkHref);\n  }\n\n  /**\n   * Determines whether the click event happened with a combination of other keys\n   */\n  private _comboClick(event) {\n    const buttonEvent = event.which || event.button;\n\n    return buttonEvent > 1 || event.ctrlKey || event.metaKey || event.shiftKey;\n  }\n\n  private _cleanUpHref(href: string = ''): string {\n    // Trim whitespaces and remove trailing slashes\n    return href.trim().replace(/(?!^)\\/+$/, '');\n  }\n}\n","import { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nexport function isNotNullable<T>(it: T): it is NonNullable<T> {\n  return it !== null && it !== undefined;\n}\n\nexport const filterNullable = <T>() => (source: Observable<T>) =>\n  source.pipe(filter(isNotNullable));\n","import {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\nimport { LinkTo } from './link-to.directive';\nimport { Router } from './router.service';\nimport { combineLatest, of, Subject, Subscription } from 'rxjs';\nimport { map, mapTo, startWith, takeUntil } from 'rxjs/operators';\nimport { filterNullable } from './operators/filter-nullable.operator';\n\nexport interface LinkActiveOptions {\n  exact: boolean;\n}\n\nexport const LINK_ACTIVE_OPTIONS: LinkActiveOptions = {\n  exact: true,\n};\n\n/**\n * The LinkActive directive toggles classes on elements that contain an active linkTo directive\n *\n * <a linkActive=\"active\" linkTo=\"/home/page\">Home Page</a>\n * <ol>\n *  <li linkActive=\"active\" *ngFor=\"var link of links\">\n *    <a [linkTo]=\"'/link/' + link.id\">{{ link.title }}</a>\n *  </li>\n * </ol>\n */\n@Directive({ selector: '[linkActive]' })\nexport class LinkActive implements AfterContentInit, OnDestroy, OnChanges {\n  @ContentChildren(LinkTo, { descendants: true }) public links: QueryList<\n    LinkTo\n  >;\n  @Input('linkActive') activeClass: string | null = 'active';\n  @Input() activeOptions?: LinkActiveOptions | null;\n  private _activeOptions: LinkActiveOptions = { exact: true };\n  private _destroy$ = new Subject();\n  private _linksSub!: Subscription;\n\n  constructor(\n    public element: ElementRef,\n    public router: Router,\n    public renderer: Renderer2,\n    @Optional()\n    @Inject(LINK_ACTIVE_OPTIONS)\n    private defaultActiveOptions: LinkActiveOptions,\n    @Optional() private link: LinkTo\n  ) {}\n\n  ngAfterContentInit() {\n    if (this.defaultActiveOptions && !this.activeOptions) {\n      this._activeOptions = this.defaultActiveOptions;\n    } else if (this.activeOptions) {\n      this._activeOptions = this.activeOptions;\n    }\n\n    this.links.changes\n      .pipe(takeUntil(this._destroy$))\n      .subscribe(() => this.collectLinks());\n    this.collectLinks();\n  }\n\n  ngOnChanges() {\n    this.collectLinks();\n  }\n\n  collectLinks() {\n    if (this._linksSub) {\n      this._linksSub.unsubscribe();\n    }\n\n    const contentLinks$ = this.links\n      ? this.links\n          .toArray()\n          .map((link) =>\n            link.hrefUpdated.pipe(\n              startWith(link.linkHref),\n              mapTo(link.linkHref),\n              filterNullable()\n            )\n          )\n      : [];\n\n    const link$ = this.link\n      ? this.link.hrefUpdated.pipe(\n          startWith(this.link.linkHref),\n          mapTo(this.link.linkHref),\n          filterNullable()\n        )\n      : of('');\n\n    const router$ = this.router.url$.pipe(\n      map((path) => this.router.getExternalUrl(path || '/'))\n    );\n\n    const observables$ = [router$, link$, ...contentLinks$];\n\n    this._linksSub = combineLatest(observables$)\n      .pipe(takeUntil(this._destroy$))\n      .subscribe(([path, link, ...links]) => {\n        this.checkActive([...links, link], path);\n      });\n  }\n\n  checkActive(linkHrefs: string[], path: string) {\n    const active = linkHrefs.reduce((isActive, current) => {\n      const [href] = current.split('?');\n      if (this._activeOptions.exact) {\n        return isActive ? isActive : href === path;\n      }\n      return isActive ? isActive : path.startsWith(href);\n    }, false);\n\n    this.updateClasses(active);\n  }\n\n  updateClasses(active: boolean) {\n    const activeClasses = this.activeClass.split(' ');\n    activeClasses.forEach((activeClass) => {\n      if (active) {\n        this.renderer.addClass(this.element.nativeElement, activeClass);\n      } else {\n        this.renderer.removeClass(this.element.nativeElement, activeClass);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroy$.next();\n  }\n}\n","import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: '[routeComponent]',\n})\nexport class RouteComponentTemplate {\n  @Input() routeComponent: any;\n}\n","import { Route } from '../route';\nimport { Params } from '../route-params.service';\n\nconst PARAM_PREFIX = ':';\n\nexport interface RouteMatch {\n  path: string;\n  params: Params;\n}\n\nconst DIV = '\\\\/'; // /\nconst DIV_PARAM = `(?:${DIV}([^\\\\/#\\\\?]+?))`; // capturing group for one or more of not (/, # or ?), optional (TODO: check if optional is needed)\nconst PATH_END = '[\\\\/#\\\\?]'; // path end: /, # or ?\nconst END = '[]|$'; // null or end\nconst EXACT_END = `${PATH_END}?$`; // match PATH_END optionally and END\nconst WILDCARD = `(?:${PATH_END}(?=${END}))?`; // match optionally PATH_END followed by END\nconst NON_EXACT_END = `${WILDCARD}(?=${PATH_END}|${END})`; // match WILDCARD followed by PATH_END or END\n\nexport function getPathSegments(route: Route): string[] {\n  const sanitizedPath = route.path.replace(/^\\//, '').replace(/(?:\\/$)/, '');\n  return sanitizedPath ? sanitizedPath.split('/') : [];\n}\n\nexport const parsePath = (route: Route): RegExp => {\n  const segments = getPathSegments(route);\n  const regexBody = segments.reduce(\n    (acc, segment) =>\n      segment.startsWith(PARAM_PREFIX)\n        ? `${acc}${DIV_PARAM}`\n        : `${acc}${DIV}${segment}`,\n    ''\n  );\n\n  if (route.options.exact ?? true) {\n    return new RegExp(`^${regexBody}${EXACT_END}`, 'i');\n  } else {\n    return new RegExp(\n      `^${regexBody}${regexBody ? NON_EXACT_END : WILDCARD}`,\n      'i'\n    );\n  }\n};\n\nexport const matchRoute = (\n  url: string,\n  route: Route\n): RouteMatch | undefined => {\n  const match = route.matcher?.exec(url);\n  if (!match) {\n    return;\n  }\n  const keys = getPathSegments(route)\n    .filter((s) => s.startsWith(PARAM_PREFIX))\n    .map((s) => s.slice(1));\n\n  return {\n    path: match[0],\n    params: keys.reduce(\n      (acc, key, index) => ({ ...acc, [key]: match[index + 1] }),\n      {}\n    ),\n  };\n};\n","import { Route } from '../route';\nimport { getPathSegments } from './path-parser';\n\n/**\n * Compares two routes and returns sorting number\n * 0 - equal\n * -1 - `a` has priority over `b`\n * 1 - `b` has priority over `a`\n *\n * @param a Route\n * @param b Route\n */\nexport const compareRoutes = (a: Route, b: Route): number => {\n  // as matchers combine normalized path and `exact` option it's safe to compare regexps\n  if (a.matcher.toString() === b.matcher.toString()) {\n    return 0;\n  }\n  const aSegments = getPathSegments(a);\n  const bSegments = getPathSegments(b);\n\n  for (let i = 0; i < Math.max(aSegments.length, bSegments.length); i++) {\n    const current = compareSegments(aSegments, bSegments, i);\n    if (current) {\n      return current;\n    }\n  }\n  // when paths are same, exact has priority\n  return a.options.exact ?? true ? -1 : 1;\n};\n\nfunction compareSegments(\n  aSegments: string[],\n  bSegments: string[],\n  index: number\n): number {\n  // if a has no more segments -> return 1\n  if (aSegments.length <= index) {\n    return 1;\n  }\n  // if b has no more segments -> return -1\n  if (bSegments.length <= index) {\n    return -1;\n  }\n  if (aSegments[index] === bSegments[index]) {\n    return 0;\n  }\n  // prioritize non-empty path over empty\n  if (!aSegments[index]) {\n    return 1;\n  }\n  if (!bSegments[index]) {\n    return -1;\n  }\n  // ignore param names\n  if (isParam(aSegments[index]) && isParam(bSegments[index])) {\n    return 0;\n  }\n  // static segment has priority over param\n  if (isParam(aSegments[index])) {\n    return 1;\n  }\n  if (isParam(bSegments[index])) {\n    return -1;\n  }\n  // when all is same run string comparison\n  return aSegments[index].localeCompare(bSegments[index]);\n}\n\nfunction isParam(segment: string): boolean {\n  return segment.startsWith(':');\n}\n","import {\n  Component,\n  SkipSelf,\n  Optional,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { combineLatest, Subject, BehaviorSubject } from 'rxjs';\nimport {\n  tap,\n  takeUntil,\n  distinctUntilChanged,\n  debounceTime,\n  map,\n} from 'rxjs/operators';\nimport { Route, ActiveRoute } from './route';\nimport { Router } from './router.service';\nimport { compareParams } from './route-params.service';\nimport { compareRoutes } from './utils/compare-routes';\nimport { matchRoute, parsePath } from './utils/path-parser';\n\ninterface State {\n  activeRoute: ActiveRoute | null;\n  routes: Route[];\n}\n\ntype UnregisterableRoute = Route & { unregister?: boolean };\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'router',\n  template: '<ng-content></ng-content>',\n})\nexport class RouterComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject();\n  private readonly state$ = new BehaviorSubject<State>({\n    activeRoute: null,\n    routes: [],\n  });\n\n  readonly activeRoute$ = this.state$.pipe(\n    map((state) => state.activeRoute),\n    distinctUntilChanged(this.compareActiveRoutes),\n    takeUntil(this.destroy$)\n  );\n  readonly routes$ = this.state$.pipe(\n    map((state) => state.routes),\n    distinctUntilChanged(this.compareRoutes),\n    takeUntil(this.destroy$)\n  );\n\n  public basePath = '';\n\n  // support multiple \"routers\"\n  // router (base /)\n  // blog(.*?)\n  // router (base /blog)\n  // post1(blog/post1/(.*?)\n  // post2\n  // post3\n\n  constructor(\n    private router: Router,\n    @SkipSelf() @Optional() public parentRouterComponent: RouterComponent\n  ) {}\n\n  ngOnInit() {\n    combineLatest([this.routes$.pipe(debounceTime(1)), this.router.url$])\n      .pipe(\n        distinctUntilChanged(),\n        tap(([routes, url]: [Route[], string]) => {\n          let routeToRender = null;\n          for (const route of routes) {\n            routeToRender = this.isRouteMatch(url, route);\n\n            if (routeToRender) {\n              this.setRoute(url, route);\n              break;\n            }\n          }\n\n          if (!routeToRender) {\n            this.setActiveRoute({ route: null, params: {}, path: '' });\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  setRoute(url: string, route: Route) {\n    this.basePath = route.path;\n    const match = matchRoute(url, route);\n    this.setActiveRoute({\n      route,\n      params: match?.params || {},\n      path: match?.path || '',\n    });\n  }\n\n  registerRoute(route: Route) {\n    route.matcher = route.matcher || parsePath(route);\n    this.updateRoutes(route);\n\n    return route;\n  }\n\n  setActiveRoute(activeRoute: ActiveRoute) {\n    this.updateState({ activeRoute });\n  }\n\n  unregisterRoute(route: Route) {\n    this.updateRoutes({ ...route, unregister: true });\n  }\n\n  normalizePath(path: string) {\n    return this.router.normalizePath(path);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  private isRouteMatch(url: string, route: Route) {\n    return route.matcher?.exec(url);\n  }\n\n  private compareActiveRoutes(\n    previous: ActiveRoute,\n    current: ActiveRoute\n  ): boolean {\n    if (previous === current) {\n      return true;\n    }\n    if (!previous) {\n      return false;\n    }\n    return (\n      previous.path === current.path &&\n      compareParams(previous.params, current.params) &&\n      previous.route.path === current.route.path &&\n      previous.route.options.exact === current.route.options.exact\n    );\n  }\n\n  private compareRoutes(previous: Route[], current: Route[]): boolean {\n    if (previous === current) {\n      return true;\n    }\n    if (!previous) {\n      return false;\n    }\n    return (\n      previous.length === current.length &&\n      previous.every((route, i) => route === current[i])\n    );\n  }\n\n  private updateState(newState: Partial<State>) {\n    this.state$.next({ ...this.state$.value, ...newState });\n  }\n\n  private updateRoutes(route: UnregisterableRoute) {\n    const routes = this.state$.value.routes;\n    if (route.unregister) {\n      this.updateState({\n        routes: routes.filter((r) => r.matcher !== route.matcher),\n      });\n    } else {\n      this.updateState({ routes: routes.concat(route).sort(compareRoutes) });\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Type,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ContentChild,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  Self,\n  NgModuleFactory,\n  Compiler,\n  OnDestroy,\n} from '@angular/core';\n\nimport { Subject, BehaviorSubject, of, from } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  takeUntil,\n  mergeMap,\n  withLatestFrom,\n  map,\n} from 'rxjs/operators';\n\nimport { Load, Route, RouteOptions } from './route';\nimport { Params, RouteParams, RoutePath } from './route-params.service';\nimport { RouterComponent } from './router.component';\nimport { Router } from './router.service';\n\nexport function getRouteParams(routeComponent: RouteComponent) {\n  return routeComponent.routeParams$;\n}\n\nexport function getRoutePath(routeComponent: RouteComponent) {\n  return routeComponent.routePath$;\n}\n\ninterface State {\n  params: Params;\n  path: string;\n  shouldRender: boolean;\n}\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'route',\n  template: `\n    <ng-container\n      *ngIf=\"(shouldRender$ | async) && template\"\n      [ngTemplateOutlet]=\"template\"\n    >\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: RouteParams,\n      useFactory: getRouteParams,\n      deps: [[new Self(), RouteComponent]],\n    },\n    {\n      provide: RoutePath,\n      useFactory: getRoutePath,\n      deps: [[new Self(), RouteComponent]],\n    },\n  ],\n})\nexport class RouteComponent implements OnInit, OnDestroy {\n  @ContentChild(TemplateRef) template: TemplateRef<any> | null;\n\n  @Input()\n  get path() {\n    return this._path;\n  }\n\n  set path(value: string) {\n    this._path = this.sanitizePath(value);\n  }\n\n  @Input() component: Type<any>;\n  @Input() load: Load;\n  @Input() reuse = true;\n  @Input() redirectTo!: string;\n  @Input() exact: boolean;\n  @Input() routeOptions: RouteOptions;\n\n  private _path: string;\n  private destroy$ = new Subject();\n  private readonly state$ = new BehaviorSubject<State>({\n    params: {},\n    path: '',\n    shouldRender: false,\n  });\n\n  readonly shouldRender$ = this.state$.pipe(map((state) => state.shouldRender));\n  readonly routeParams$ = this.state$.pipe(\n    map((state) => state.params),\n    distinctUntilChanged(),\n    takeUntil(this.destroy$)\n  );\n  readonly routePath$ = this.state$.pipe(\n    map((state) => state.path),\n    distinctUntilChanged(),\n    takeUntil(this.destroy$)\n  );\n  route!: Route;\n\n  constructor(\n    private router: Router,\n    private routerComponent: RouterComponent,\n    private resolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private compiler: Compiler\n  ) {}\n\n  ngOnInit(): void {\n    // account for root level routes, don't add the basePath\n    const path = this.routerComponent.parentRouterComponent\n      ? this.routerComponent.parentRouterComponent.basePath + this.path\n      : this.path;\n\n    this.route = this.registerRoute(path, this.exact, this.load);\n\n    this.routerComponent.activeRoute$\n      .pipe(\n        filter((ar) => ar !== null),\n        distinctUntilChanged(),\n        withLatestFrom(this.shouldRender$),\n        mergeMap(([current, rendered]) => {\n          if (current.route === this.route) {\n            if (this.redirectTo) {\n              this.router.go(this.redirectTo);\n              return of(null);\n            }\n\n            this.updateState({\n              params: current.params,\n              path: current.path,\n            });\n\n            if (!rendered) {\n              if (!this.reuse) {\n                this.clearView();\n              }\n\n              return this.loadAndRender(current.route);\n            }\n\n            return of(null);\n          } else if (rendered) {\n            return of(this.clearView());\n          }\n\n          return of(null);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.routerComponent.unregisterRoute(this.route);\n    this.destroy$.next();\n  }\n\n  registerRoute(path: string, exact: boolean, load: Load) {\n    return this.routerComponent.registerRoute({\n      path: path,\n      load: load,\n      options: this.routeOptions || { exact: exact },\n    });\n  }\n\n  private loadAndRender(route: Route) {\n    if (route.load) {\n      return from(\n        route.load().then((componentOrModule) => {\n          if (componentOrModule instanceof NgModuleFactory) {\n            const moduleRef = componentOrModule.create(\n              this.viewContainerRef.injector\n            );\n            const component = moduleRef.instance.routeComponent;\n\n            this.renderComponent(component);\n          } else if (componentOrModule.ɵmod) {\n            return this.compiler\n              .compileModuleAsync(componentOrModule as Type<any>)\n              .then((moduleFactory) => {\n                const moduleRef = moduleFactory.create(\n                  this.viewContainerRef.injector\n                );\n                const component = moduleRef.instance.routeComponent;\n                this.renderComponent(component);\n\n                return true;\n              });\n          } else {\n            this.renderComponent(componentOrModule);\n          }\n\n          return true;\n        })\n      );\n    } else {\n      this.showTemplate();\n      return of(true);\n    }\n  }\n\n  private renderComponent(component: Type<any>) {\n    const componentFactory = this.resolver.resolveComponentFactory(component);\n\n    this.showTemplate();\n    this.viewContainerRef.createComponent(\n      componentFactory,\n      this.viewContainerRef.length,\n      this.viewContainerRef.injector\n    );\n  }\n\n  private clearComponent() {\n    this.viewContainerRef.clear();\n    this.hideTemplate();\n  }\n\n  private showTemplate() {\n    setTimeout(() => {\n      this.updateState({ shouldRender: true });\n    });\n  }\n\n  private hideTemplate() {\n    this.updateState({ shouldRender: false });\n  }\n\n  private clearView() {\n    if (this.load) {\n      this.clearComponent();\n    } else {\n      this.hideTemplate();\n    }\n  }\n\n  private sanitizePath(path: string): string {\n    const trimmed = path.trim();\n    return trimmed.startsWith('/') ? trimmed : `/${trimmed}`;\n  }\n\n  private updateState(newState: Partial<State>) {\n    this.state$.next({ ...this.state$.value, ...newState });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport {\n  LocationStrategy,\n  PathLocationStrategy,\n  CommonModule,\n} from '@angular/common';\n\nimport { RouterComponent } from './router.component';\nimport { RouteComponent } from './route.component';\nimport { RouteComponentTemplate } from './route-component.directive';\nimport { LinkActive } from './link-active.directive';\nimport { LinkTo } from './link-to.directive';\nimport { UrlParser } from './url-parser';\nimport { QueryParams } from './route-params.service';\nimport { Router } from './router.service';\n\nexport const components = [\n  RouterComponent,\n  RouteComponent,\n  LinkActive,\n  LinkTo,\n  RouteComponentTemplate,\n];\n\nexport function getQueryParams(router: Router) {\n  return router.queryParams$;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [components],\n  exports: [components],\n})\nexport class ComponentRouterModule {\n  static forRoot(): ModuleWithProviders<ComponentRouterModule> {\n    return {\n      ngModule: ComponentRouterModule,\n      providers: [\n        UrlParser,\n        { provide: LocationStrategy, useClass: PathLocationStrategy },\n        { provide: QueryParams, deps: [Router], useFactory: getQueryParams },\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of router\n */\n\nexport * from './lib/link-active.directive';\nexport * from './lib/link-to.directive';\nexport * from './lib/route-component.directive';\nexport * from './lib/router.service';\nexport * from './lib/router.component';\nexport * from './lib/route';\nexport * from './lib/route.component';\nexport * from './lib/router.module';\nexport * from './lib/route-params.service';\nexport * from './lib/url-parser';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}