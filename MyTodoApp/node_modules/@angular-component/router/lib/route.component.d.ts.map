{"version":3,"file":"route.component.d.ts","sources":["route.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, Type, ViewContainerRef, ComponentFactoryResolver, TemplateRef, Compiler, OnDestroy } from '@angular/core';\nimport { Load, Route, RouteOptions } from './route';\nimport { Params } from './route-params.service';\nimport { RouterComponent } from './router.component';\nimport { Router } from './router.service';\nexport declare function getRouteParams(routeComponent: RouteComponent): import(\"rxjs\").Observable<Params>;\nexport declare function getRoutePath(routeComponent: RouteComponent): import(\"rxjs\").Observable<string>;\nexport declare class RouteComponent implements OnInit, OnDestroy {\n    private router;\n    private routerComponent;\n    private resolver;\n    private viewContainerRef;\n    private compiler;\n    template: TemplateRef<any> | null;\n    get path(): string;\n    set path(value: string);\n    component: Type<any>;\n    load: Load;\n    reuse: boolean;\n    redirectTo: string;\n    exact: boolean;\n    routeOptions: RouteOptions;\n    private _path;\n    private destroy$;\n    private readonly state$;\n    readonly shouldRender$: import(\"rxjs\").Observable<boolean>;\n    readonly routeParams$: import(\"rxjs\").Observable<Params>;\n    readonly routePath$: import(\"rxjs\").Observable<string>;\n    route: Route;\n    constructor(router: Router, routerComponent: RouterComponent, resolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, compiler: Compiler);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    registerRoute(path: string, exact: boolean, load: Load): Route;\n    private loadAndRender;\n    private renderComponent;\n    private clearComponent;\n    private showTemplate;\n    private hideTemplate;\n    private clearView;\n    private sanitizePath;\n    private updateState;\n}\n"]}