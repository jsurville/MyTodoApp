import { EventEmitter } from '@angular/core';
import { Router } from './router.service';
import { Params } from './route-params.service';
/**
 * The LinkTo directive links to routes in your app
 *
 * Links are pushed to the `Router` service to trigger a route change.
 * Query params can be represented as an object or a string of names/values
 *
 * <a linkTo="/home/page" [queryParams]="{ id: 123 }">Home Page</a>
 * <a [linkTo]="'/pages' + page.id">Page 1</a>
 */
import * as ɵngcc0 from '@angular/core';
export declare class LinkTo {
    private router;
    target: string;
    linkHref?: string | null;
    set linkTo(href: string | null | undefined);
    set queryParams(params: Params | null | undefined);
    set fragment(hash: string | null | undefined);
    hrefUpdated: EventEmitter<string>;
    private _href;
    private _query;
    private _hash;
    constructor(router: Router);
    /**
     * Handles click events on the associated link
     * Prevents default action for non-combination click events without a target
     */
    onClick(event: any): void;
    private _updateHref;
    /**
     * Determines whether the click event happened with a combination of other keys
     */
    private _comboClick;
    private _cleanUpHref;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LinkTo, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LinkTo, "a[linkTo]", never, { "target": "target"; "linkTo": "linkTo"; "queryParams": "queryParams"; "fragment": "fragment"; }, { "hrefUpdated": "hrefUpdated"; }, never>;
}

//# sourceMappingURL=link-to.directive.d.ts.map